for(i in 1:10)
{
usq[i]<-u1[i]*u1[i] # i-th element of u1 squared into i-th position of usq
print(i)
}
for(i in 1:10)
{
usq[i]<-u1[i]*u1[i] # i-th element of u1 squared into i-th position of usq
print(i)
for(i in 1:10){print(i)}
print(i)
}
for(i in 1:10)
{}
{}
for(i in 1:10)
{print(i)}
for(i in 1:10)
{print(i)}
factorial <- function(x){
y <- 1
for(i in 1:x){
y <-y*((1:x)[i])
print(y)
}
}
factorial(6)
factorial <- function(x)
{
y <- 1
for(i in 1:x)
{
print(1:x)
y <-y*((1:x)[i])
}
print(y)
}
factorial(3)
(1:3)
(1:3)[1]
(1:3)[3]
factorial <- function(x)
{
y <- 1
for(i in 1:x)
{
y <-y*((1:x)[i])
}
return y
}
factorial <- function(x)
{
y <- 1
for(i in 1:x)
{
y <-y*((1:x)[i])
}
return y
}
factorial <- function(x)
{
y <- 1
for(i in 1:x)
{
y <-y*((1:x)[i])
}
return y
}
factorial <- function(x)
{
y <- 1
for(i in 1:x)
{
y <-y*((1:x)[i])
}
print(y)
}
factorial <- function(x)
{
y <- 1
for(i in 1:x)
{
y <-y*((1:x)[i])
}
return(y)
}
factorial(3)
factorial <- function(x)
{
y <- 1
for(i in 1:x)
{
y <-y*((1:x)[i])
}
return(y)
}
n <- 5
r <- 3
result <- factorial(n) / (factorial(r) * factorial(n-r))
print(result)
